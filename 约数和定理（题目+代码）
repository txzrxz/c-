约数和定理（题目+代码）:

题目描述：
输入n，输入n个正整数，求每一个数字的所有约数之和。

输入格式：
第1行1个正整数n，第2行n个正整数。所有数字均不超过10000。

输出格式：
n个数字为输入n个正整数的约数之和。

样例：
输入数据 1：
3
12 36 100

输出数据 1：
28 91 217

代码：
#include <bits/stdc++.h>
using namespace std;
/*约数个数定理：
n = a1^p1 * a2^p2 * a3^p3 * …… * an^pn
a1、a2、a3、……、an为n的不同的质因数
n的约数之和 = (1+a1+a1^2+……a1^p1) * (1+a2^2+……+a2^p2) * …… *  (1+an+an^2+……+an^pn) 
			= ((a1^(p1+1)-1) / (a1-1)) *  ((a2^(p2+1)-1) / (a2-1)) * …… * ((an^(pn+1)-1) / (an-1)) 
100 = 2^2 * 5^2
100的约数和 = (1+2+2^2) * (1+5+5^2) = 7 * 31 = 217
*/
long long fun(int n){
	long long ans=1;
	for(int i=2;i<=sqrt(n);i++){
		int cnt=0;//统计个数 
		while(n%i==0){
			cnt++;
			n/=i;
		}
		if(cnt>0){
			long long t=pow(i,cnt+1);//i^(cnt + 1) -> ai^(pi+1)
			ans*=(t-1)/(i-1);
		}
	}
	if(n>1)ans*=(1LL+n); 
	return ans;
}
int main(){
	int n,t;
	cin>>n;
	while(n--){
		cin>>t;
		cout<<fun(t)<<' ';
	}
    return 0;
}
