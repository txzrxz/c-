分巧克力：

题目描述：
儿童节那天有 K 位小朋友到小明家做客。小明拿出了珍藏的巧克力招待小朋友们。

小明一共有 N 块巧克力，其中第 i 块是 Hi×Wi的方格组成的长方形。

为了公平起见，小明需要从这 N 块巧克力中切出 K 块巧克力分给小朋友们。切出的巧克力需要满足：

形状是正方形，边长是整数。

大小相同。

例如一块 6×5 的巧克力可以切出 6 块 2×2 的巧克力或者 2 块 3×3 的巧克力。

当然小朋友们都希望得到的巧克力尽可能大，你能帮小明计算出最大的边长是多少么？

输入格式：
第一行包含两个整数 N 和 K。(1≤N,K≤10^5)。

以下 N 行每行包含两个整数 Hi和 Wi。(1≤Hi,Wi≤10^5 )。

输入保证每位小朋友至少能获得一块 1×1 的巧克力。

输出格式：
输出切出的正方形巧克力最大可能的边长。

样例：
输入数据 1：
2 10  
6 5  
5 6

输出数据 1：
2

提示：
1≤N,K≤10^5，1≤Hi,Wi≤10^5

代码：
#include <bits/stdc++.h>
using namespace std;
/*
1.找到要二分的答案的范围
2.l是最小的数,r是最大可能的数(题目给的范围)
3.while(l<=r)
4.检查当前mid是否是正确的，正确的可能就是
答案(自己写检查函数，不同题目的检查代码可能会不同)
*/
int n,k,h[100001],w[100001];//h:长 w:宽
bool check(int d){
	int ans=0;
	for(int i=0;i<n;i++){//枚举所有的巧克力
		ans+=(h[i]/d)*(w[i]/d);
	}
	return ans>=k;
}
int main() {
	cin>>n>>k;
	for(int i=0;i<n;i++)cin>>h[i]>>w[i];
	int l=1,r=100000,ans=1;
	while(l<=r){
		int mid=(l+r)/2;
		if(check(mid)==1){//能切出来k块边长为mid的巧克力
		ans=mid;//能切出来k块的最大的边长
		l=mid+1;//还有更长的边长也能切出来k块
		}else{//不能切出来，边长太长了
			r=mid-1;//变小一点
		}
	}
	cout<<ans;
	return 0;
}
