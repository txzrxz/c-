单词统计：

题目描述：
输入两个字符串，第1个字符串由多个单词组成，单词与单词之间用一个空格隔开，第2个字符串为一个不包含空格的单词。单词只由大小写字母构成。求在不区分大小写的情况下，第1个字符串中包含多少个第2个字符串所存储的单词。不存在输出-1。

输入格式：
两行，两个字符串。

输出格式：
一个整数，第1个字符串中包含第二个字符串的数量，不存在输出-1。

样例：
输入数据 1
abc cd Cd aaa ac CD
cd
  
输出数据 1
3

代码:
#include <bits/stdc++.h>
using namespace std;
int main() {
    char s[1000],s1[1000];//char类型数组可以使用tolower或toupper
    cin.getline(s,1000);//char类型数组能输入空格的方式
    cin>>s1;
    int len=strlen(s),sum=0,s1dlen=strlen(s1);//s1dlen意思是s1的len,计算两个字符串的长度
    for(int i=0;i<=len-s1dlen;i++){
        bool m=true;
        for(int j=0;j<s1dlen;j++){//两个字符串的共同规律
            if(tolower(s[i+j])!=tolower(s1[j])){//转换大小写
                m=false;//不是相同
                break;//如果不是则跳出小循环（j）继续大循环（i）
            }
        }
        if(m){//如果是相同的就不会执行跳过（break），来到这里，括号内只写m就是判断m是否为1（真）
            sum++;//计数变量增加
        }
    }
    if(sum==0){
        cout<<"-1";
    }else{
        cout<<sum;
    }
    return 0;
}
