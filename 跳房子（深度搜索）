跳房子：

题目描述：
x在玩一种叫跳房子的游戏，房子地图是一个n×m矩阵，每个房间均有0、1标示。x从标示为2的位置开始，沿着标示为0的房间跳，注意只能向四周相邻的的同样标示的房间跳跃。请写一个程序，计算你总共能够到达多少个标示为0的房间。注意：x的起始位置2也进行计数。

输入格式：
第一行是两个整数n和m，表示地图是n行m列大小（1<n,m<20）。在接下来的n行中，每行包括m个数字。数字由0、1、2组成，2表示你当前所在位置。数字之间用空格隔开。

输出格式：
一行，表示你从初始位置出发能到达的房间数。

样例：
输入数据 1：
5 6
0 0 0 0 1 0
0 0 0 0 0 1
0 0 0 0 0 0
1 2 0 0 0 1
0 1 0 0 1 0

输出数据 1:
21

代码：
#include <bits/stdc++.h>
using namespace std;
/*
c:计数
a[]:房间地图         
v[]:标记
*/
int n,m,a[21][21],c,sx,sy; 
int dis[4][2]={{-1,0},{1,0},{0,-1},{0,1}};                 
bool v[21][21];      
void dfs(int x,int y){
    v[x][y]=true;
    c++;
    for(int i=0;i<4;i++){
        int tx=x+dis[i][0],ty=y+dis[i][1];
        if(tx>=0 && tx<n && ty>=0 && ty<m && !v[tx][ty] && a[tx][ty]==0){
            dfs(tx,ty);
        }
    }
}
int main(){
    scanf("%d",&n);
    scanf("%d",&m);  
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf("%d",&a[i][j]);
            v[i][j]=false;
            if(a[i][j]==2){
                sx=i;
                sy=j;
            }
        }
    }
    dfs(sx,sy);
    printf("%d\n",c);
    return 0;
}
