老鼠吃奶酪:

题目描述：
老鼠Jerry已经好几天没有找到食物了，今天他的运气很不错，刚出门就闻到奶酪的气味，根据气味找到一个迷宫的入口，在迷宫的某个位置放着一块奶酪。 迷宫是一个 n×m 的方格矩阵，左上角方格的坐标是 (1,1)，入口在左下角的方格 (n,1)，每步可以移动一个方格，要求始终在矩阵内移动。 Jerry知道只需要每步向上或向右移动，一定可以找到奶酪。请你帮助Jerry计算从起点到奶酪不同移动路线的总数。 注意:两条路线只要有一步不同，即为不同移动路线。

0<n，m≤20，1≤x≤n，1≤y≤m

输入格式：
输入有两行，第一行包括两个整数 n 和 m ，表示迷宫的行数和列数。 第二行包括两个整数 x 和 y，表示奶酪的坐标。

输出格式：
输出一个整数，表示不同移动路线的总数。

样例：
输入数据 1
3 4
2 3

输出数据 1
3

代码：
#include <bits/stdc++.h>
using namespace std;
// a[i][j] 表示从(i, j)到奶酪(x, y)的路径数
int a[21][21];
int main() {
    int n,m,x,y;
    cin>>n>>m>>x>>y;
    //从(n,1)出发,只能上或右走,所以倒着推
    for (int i=n;i>=x;i--){
        for (int j=1;j<=y;j++){
            if(i==n || j==1){
                //到最底一行或最左一列,只能直走到终点
                a[i][j]=1;
            }else{
                //状态转移从左边(j-1)和下边(i+1)来的路径数之和
                a[i][j]=a[i][j-1]+a[i+1][j];
            }
        }
    }
    cout<<a[x][y];
    return 0;
}
