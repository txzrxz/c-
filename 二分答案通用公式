#include <bits/stdc++.h>
using namespace std;
/*
二分答案:二分答案是一种通过二分搜索可能解来找到最优解的技术，
通常用于求解最大值最小化或最小值最大化的问题 
思路： 
1. 找到要二分的答案的范围
2. l是最小的数(1),r是最大可能的数(题目给的范围，这里假设为100000)
3. while(l<=r)
4. 检查当前mid是否是正确的，正确的可能就是答案
   (自己写检查函数，不同题目的检查代码可能会不同)
*/

// 变量名可能不一样 ，自己看情况进行改变 
int n,k;// n: 数量, k: 看题目，可能是装载量，可能是最小值 
int h[100001],w[100001];// 看题目。说不定不需要，也可以换成结构体(里面的两个变量充当数组) 
// 检查函数：判断(看题目)
// 所有判断函数的代码都需要依据题目所给出的条件，不过其他的代码没有太多要改的 
bool check(int d){
    int ans=0;// 记录
    for(int i=0;i<n;i++){
        ans+=(h[i]/d)*(w[i]/d);// 计算
    }
    return ans>=k;// 如果……则返回true
}
int main() {
    cin>>n>>k;// 输入 n和k
    for(int i=0;i<n;i++){
        cin>>h[i]>>w[i];// 输入两个数组 
    }
    int l=1,r=100000,ans=1;// l: 二分搜索的左边界
	// r: 二分搜索的右边界, ans: 最终答案
    while(l<=r){
        int mid=(l+r)/2; // 计算中间值mid
        if(check(mid)){// 如果当前mid满足条件
            ans=mid;// 更新答案(但是往上算可能会有更大的也符合，所以下面要尝试更大的) 
            l=mid+1;// 尝试更大的
        }else{
            r=mid-1;// 尝试更小的
        }
    }
    cout<<ans;// 输出最终答案
    return 0;
}
