八个方向统计线路：

题目描述：
已知山洞里面是由许多房间组成的迷宫，每个房间可以通往周围八个房间，迷宫大小是一个N*N的正方形，其中有一些蝙蝠堵路。现在从起始(1,1)的位置进入洞穴寻找宝藏（只有一个宝箱），统计有多少条线路可以找到宝藏。

输入格式：
第一行是一个正整数N（2<=N<=6）,后面包含N*N行由0，1，2组成的矩阵，其中0表示可以走，1表示蝙蝠，2表示宝藏的位置。

输出格式：
一行，一个整数，表示可以找到宝藏的线路。

样例：
输入数据 1：
2
0 0
0 2

输出数据 1：
5

代码：
#include <bits/stdc++.h>
using namespace std;
int n,a[10][10],ans;
int dis[8][2]={{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1},{-1,-1}};
void dfs(int x,int y){
    if(a[x][y]==2){
        ans++;return;
    }
    for(int i=0;i<8;i++){
        int tx=x+dis[i][0],ty=y+dis[i][1];
        if(tx>=1 && tx<=n && ty>=1 && ty<=n && a[tx][ty]!=1){
            if(a[tx][ty]==0)a[tx][ty]=1;//只标记0
            dfs(tx,ty);
            if(a[tx][ty]==1)a[tx][ty]=0;
        }
    }
}
int main() {
	cin>>n;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			cin>>a[i][j];
		}
	}
	a[1][1]=1;
	dfs(1,1);
	cout<<ans;
	return 0;
}
