全排列：

题目描述：
有 1～n 这 n（n<10）个数，现将这 n 个数组成一个 n 位的数，每个数只能用一次，例如 n=2，则 12，21等都是符合条件的数，但 11 和 22 不行。问，输入 n 后，将符合条件的所有的 n 位数输出，且按照从小到大顺序输出。

输入格式：
一个正整数 n。

输出格式：
按从小到大输出所有的全排列数，每行一个数（中间用空格隔开）。

样例：
输入数据 1：
2

输出数据 1：
1 2
2 1

代码：
#include <bits/stdc++.h>
using namespace std;
// a[] 存储当前排列的结果
// v[] 标记某个数字是否已经被用过
// n 表示要排列的数字个数（1~n）
int a[11],v[11],n;
// 递归函数：在第x个位置放一个没用过的数
void fun(int x){
    // 如果x已经到n+1，说明前n个位置都已经放好，生成了一个完整的排列
    if(x==n+1){
        // 输出当前的排列
        for(int i=1;i<=n;i++)
            cout<<a[i]<<' ';
        cout<<endl; // 换行，分隔不同排列
        return; // 结束当前递归分支
    }
    // 枚举所有可能放在第x个位置上的数
    for(int i=1;i<=n;i++){
        if(v[i]==0){ // 如果数字i还没有被用过，能放
            a[x]=i;    // 把数字i放在第x个位置，放
            v[i]=1;    // 标记数字i已经被使用
            fun(x+1);  // 递归处理下一个位置
            v[i]=0;    // 回溯：撤销标记，为后续尝试其他数做准备
        }
    }
}
int main(){
    cin>>n;   // 输入要全排列的数字个数
    fun(1);     // 从第1个位置开始递归生成全排列
    return 0;
}
