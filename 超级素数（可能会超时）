题目描述：
在大于 1 的自然数中，除了 1 和它本身以外不再有其他因数的数，被称为素数，又叫质数。 超级素数是指一个素数，每去掉最后一位上一个数字，总能保证剩下的数依然为素数。 比如 "373" 就是一个超级素数，去掉个位的 "3" 后，"37" 依然是素数：继续去掉"37" 个位的 "7" 后，"3" 还是素数。

输入格式：
输人一个整数 n。

输出格式：
输出所有小于等于 n 的超级素数的个数。

样例：
输入数据 1
30
  
输出数据 1
6

代码：
#include <bits/stdc++.h>
using namespace std;
//判断是否为素数
bool form(int n){
    if(n<2)return false;
    if(n==2)return true;
    if(n%2==0)return false;
    for(int i=3;i*i<=n;i+=2){
        if(n%i==0) return false;
    }
    return true;
}
//判断是否为超级素数
bool fun(int x){
    while(x>0){
        if(!form(x))return false;
        x/=10; //去掉最后一位
    }
    return true;
}
int main() {
    int n,sum=0;
    scanf("%d",&n);
    for(int i=2;i<=n;i++){
        if(fun(i)==true){
        	sum++;
        }
    }
    printf("%d",sum);
    return 0;
}
