多少块水洼：

题目描述：
有一块 N×M 的土地，雨后积起了水，有水标记为‘W’，干燥为‘.’。八连通的积水被认为是连接在一起的。请求出院子里共有多少水洼？

输入格式：
第一行为 N,M (1≤N,M≤100)。 下面为 N×M的土地示意图。

输出格式：
一行，共有的水洼数。

样例：
输入数据 1：
10 12
W........WW.
.WWW.....WWW
....WW...WW.
.........WW.
.........W..
..W......W..
.W.W.....WW.
W.W.W.....W.
.W.W......W.
..W.......W.

输出数据 1：
3

代码：
#include <bits/stdc++.h>
using namespace std;
int n,m,ans;
char a[101][101];
int dis[8][2]={{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1},{-1,-1}};
void dfs(int x,int y){
    for(int i=0;i<8;i++){
        int tx=x+dis[i][0],ty=y+dis[i][1];
        if(tx>=1 && tx<=n && ty>=1 && ty<=m && a[tx][ty]!='.'){
            a[tx][ty]='.';
            dfs(tx,ty);
        }
    }
}
int main() {
	cin>>n>>m;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin>>a[i][j];
		}
	}
    for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){//枚举地图找W
			if(a[i][j]=='W'){//找到一个新的水洼
            //为了防止被重复统计，把与之相连的所有W都变成 .
                ans++;
                a[i][j]='.';
                dfs(i,j);
            }
		}
	}
	a[1][1]=1;
	dfs(1,1);
	cout<<ans;
	return 0;
}
