区间合并：

题目描述：
给定 n 个闭区间 [ai,bi]，其中 i=1,2,...,n 。任意两个相邻或相交的闭区间可以合并为一个闭区间。例如，[1,2] 和 [2,3] 可以合并为 [1,3]，[1,3] 和 [2,4] 可以合并为 [1,4]，但是[1,2] 和 [3,4] 不可以合并。 我们的任务是判断这些区间是否可以最终合并为一个闭区间，如果可以，将这个闭区间输出，否则输出no。

输入格式：
第一行为一个整数 n，3≤n≤50000。表示输入区间的数量。 之后 n 行，在第 i 行上（1≤i≤n），为两个整数 ai和 bi，整数之间用一个空格分隔，表示区间 [ai,bi]（其中 1≤ai≤bi≤10000）。

输出格式：
输出一行，如果这些区间最终可以合并为一个闭区间，输出这个闭区间的左右边界，用单个空格隔开；否则输出 no。

样例：
输入数据 1：
5
5 6
1 5
10 10
6 9
8 10

输出数据 1：
1 10

代码：
#include <bits/stdc++.h>
using namespace std;
struct node{
    int a1,a2; 
}a[50001];
bool cmp(node a,node b){
	return a.a1<b.a1;
}
int n;
int main() {
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>a[i].a1>>a[i].a2;
    }
    sort(a,a+n,cmp);
    int last=a[0].a2;
	for(int i=1;i<n;i++){//从第二个区间开始枚举，往大区间中进行合并
		if(a[i].a1<=last){
            last=max(last,a[i].a2);
		}else{
            cout<<"no";
            return 0;
        }
	}
    cout<<a[0].a1<<' '<<last;
	return 0;
}
