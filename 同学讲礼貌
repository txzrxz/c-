同学讲礼貌:

题目描述：
学校的学生非常遵守学校的规章制度。小朋友们课间喝水，都去排队打水，但是条件很有限，只有一台饮水机。为了珍惜有限的课余时间，老师想到了一个办法，让同学们的平均等待时间最少。现在有 n 个小朋友在一个饮水机前排队接水，假如每个人接水的时间为 Ti，请你编程帮老师找出这 n 个小朋友排队的一种顺序，使得 n 个人的平均等待时间最小。(需要考虑自己打水的时间)

输入格式：
输入文件共两行，第一行为 n，1≤n≤1000 第二行分别表示第 1 个同学到第 n 个同学每人的接水时间 T1，T2，…，Tn，每个数据之间有 1 个空格，0<Ti≤1000。

输出格式：
输出文件有一行，为老师得到的某种排列方案下的最小平均等待时间(输出结果精确到小数点后两位)。

样例：
输入数据 1：
10                                    
56 12 1 99 1000 234 33 55 99 812

输出数据 1：
532.00

代码：
#include <bits/stdc++.h>
using namespace std;
int main() {
	int n;
    cin>>n;
    int t[n];
    for(int i=0;i<n;i++){
        cin>>t[i];
    }
    sort(t,t+n);// 对数组t进行升序排序（核心逻辑：接水时间短的先接，减少总等待时间）
    double sum=0,num=n;//  sum:存储所有小朋友的总等待时间
    //num: 记录当前等待的人数（初始为n，每结束一个人减1）
    for(int i=0;i<n;i++){
    // 第i个小朋友的接水时间为t[i]，此时有num个人在等待（包括自己）
    // 因此该小朋友的接水行为会导致总等待时间增加 t[i] * num
        sum+=t[i]*num;
        num--;
    }
    sum/=n;// 计算平均等待时间（总等待时间 / 人数）
    printf("%.2lf",sum);
	return 0;
}
