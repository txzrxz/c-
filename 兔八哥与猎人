兔八哥和猎人：

题目描述：
兔八哥躲藏在树林旁边的果园里。果园有 M×N 棵树，组成一个 M 行 N 列的矩阵，水平或垂直相邻的两棵树的距离为 1。兔八哥在一棵果树下。 猎人背着猎枪走进了果园，他爬上一棵果树，准备杀死兔八哥。 如果猎人与兔八哥之间没有其它的果树，猎人就可以看到兔八哥。 现己知猎人和兔八哥的位置，编写程序判断兔子所在的位置是否安全.

输入格式：
第一行为 n，表示有 n 组数据，每组数据的第一行为两个正整数 ax和 ay，表示猎人的位置，第二行为两个正整数 bx 和 by，表示兔八哥的位置。

输出格式：
共有 n 行，每行为 yes 或 no 表示兔八哥的位置是否安全。

样例：
输入数据 1:
1
1 1
1 2

输出数据 1:
no

代码：
#include <bits/stdc++.h>
using namespace std;
/*
如果在同一行或者同一列，相邻 不安全，不相邻 安全
不在同一行或者同一列 判断行的差值 和 列的差值 如果互质 不安全，不互质 安全
*/
int fun(int a,int b){//辗转相除法求最大公约数（欧几里德算法）
    if(b==0){
        return a;
    }else{
        return fun(b,a%b);
    }
}
int main(){
    int n,x1,y1,x2,y2;
    cin>>n;
    while(n--){
        cin>>x1>>y1>>x2>>y2;
        if(x1==x2){
            if(abs(y1-y2)==1)cout<<"no"<<endl;
            else cout<<"yes"<<endl;
        }else if(y1==y2){
            if(abs(x1-x2)==1)cout<<"no"<<endl;
            else cout<<"yes"<<endl;
        }else{
            if(fun(abs(x1-x2),abs(y1-y2))==1)cout<<"no"<<endl;
            else cout<<"yes"<<endl;
        }
    }
    return 0;
}
