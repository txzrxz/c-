约数个数定理：

题目描述：
输入n，输入n个正整数，求每一正整数的约数个数。

输入格式：
第1行一个正整数n，第2行n个正整数。n及正整数均不超过10000。

输出格式：
n个数字，为每个正整数的约数个数。

样例：
输入数据 1：
2
36 12

输出数据 1：
9
6

代码：
#include <bits/stdc++.h>
using namespace std;
/*约数个数定理：
n = a1^p1 * a2^p2 * a3^p3 * …… * an^pn
a1、a2、a3、……、an为n的不同的质因数
n的约数个数 = (p1+1) * (p2+1) * …… * (pn+1)
n的约数之和 = (1+a1+a1^2+……a1^p1) * (1+a2^2+……+a2^p2) * …… *  (1+an+an^2+……+an^pn) 
100 = 2^2 * 5^2
100的约数个数 = (2+1) * (2+1) = 9
100的约数和 = (1+2+2^2) * (1+5+5^2) = 7 * 31 = 217
*/
int fun(int n){
	int ans=1;
	for(int i=2;i<=sqrt(n);i++){
		int cnt=0;//统计个数 
		while(n%i==0){
			cnt++;
			n/=i;
		}
		ans*=cnt+1;
	}
	if(n>1)ans*=2; 
	return ans;
}
int main(){
	int n,t;
	cin>>n;
	while(n--){
		cin>>t;
		cout<<fun(t)<<endl;
	}
    return 0;
}/*
如果一个数字(n)能被拆分成两个质数相乘的样式，那么n除了1和它本身以外就只有这两个数是它的因子
例:21=3*7，而除了1和21以外，21就只有3和7这两个因子 
大于sqrt(n)的因子有且只有一个
*/
