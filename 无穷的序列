无穷的序列:

题目描述：
有一个无穷序列如下： 110100100010000100000…… 请你找出这个无穷序列中指定位置上的数字。

输入格式：
第一行一个正整数 N，表示询问次数 接下来的 N 行每行一个正整数 Ai，Ai表示在序列中的位置。

输出格式：
N 行，每行为 0 或 1，表示序列第 Ai位上的数字。

样例：
输入数据 1:
4 
3 
14 
7 
6

输出数据 1:
0
0
1
0

提示:
对于 100% 的数据有 N≤150000，Ai≤10^8

代码：
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll n;
int main() {
	cin>>n;
	while(n--){
		ll ai,x;
		scanf("%lld",&ai);
		x=sqrt(2*ai);//(1+x)*x/2>=ai
		while((1+x)*x<2*ai)x++;
		if((1+x)*x==2*ai){//ai刚好是前x项的和
		//ai的位置就在当前项的最后一个数 
			if(x==1){//第一项 
			cout<<"1";
		}else{
			cout<<"0";
		}
		cout<<endl;
	}else{
		ll t1=(1+x)*x/2;
		if(x-(t1-ai)==1)cout<<"1"<<endl;
		else cout<<"0"<<endl; 
	}
}
	return 0;
}
