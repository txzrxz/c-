题目描述：
输入n 个正整数，要求输出n个整数中最长连号的长度。 连号指在n个整数中，从小到大的连续自然数。

输入格式：
第一行，一个整数n，1≤n≤10000 。 第二行，n个整数a，之间用空格隔开，1≤a≤10000。

输出格式：
一个数，最长连号的个数。

样例：
输入数据 1：
10
1 5 6 2 3 4 5 6 8 9

输出数据 1：
5

代码：
#include <bits/stdc++.h>
using namespace std;
int main() {
	int n,sum=1,num=1; 
    // n:存储输入的整数个数
    // sum:记录当前连号的长度，初始为1（至少包含当前元素）
    // num:记录最长连号的长度
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    for(int i=1;i<n;i++){
        // 判断当前元素是否是前一个元素的连续自然数（当前元素 = 前一个元素 + 1）
        if(a[i]==a[i-1]+1){
            sum++;
        }
        // 若不是连号，重置当前连号长度为1（从当前元素重新开始计数）
        else{
            sum=1;
        }// 若当前连号长度超过已记录的最长长度，更新最长长度
        if(sum>num){
            num=sum;
        }
    }cout<<num;
    return 0;
}
